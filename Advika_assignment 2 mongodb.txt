1. Group users by role and calculate the average salary for each role

[
  {
    $group: {
      _id:"$role",
      avgsal:{$avg:"$salary"}
    }
  }
]


2. Group users by city and find the total number of users in each city.
[
  {
    $group: {
      _id:"$city",
      countofusers:{$sum:1}
    }
  }
]

3. Group users by gender and determine the average age for each gender.
[
  {
    $group: {
      _id:"$gender",
      average:{$avg:"$age"}
    }
  }
]



4. Group users by role and city, and calculate the total salary for each subgroup.

[
  {
    $group: {
      _id:{role:"$role",city:"$city"},
    
      averagesal:{$avg:"$salary"}
    }
  }
]



5. Group users by gender and city, and find the maximum salary in each subgroup.
[
  {
    $group: {
      _id:{gender:"$gender",city:"$city"},
    maxsal:{$max:"$salary"}
    }
  }
]

6. Group users by skills and count how many users have each skill.
[ {$unwind:"$skills"},
  {
    $group: {
      _id:"$skills",
       countofusers:{$sum:1}
    }
  }
]



7. Group users by role and find the minimum age for each role.
[
  {
    $group: {
      _id:"$role",
    minage:{$min:"$age"}
    }
  }
]


8. Group users by city and gender, and calculate the average salary for each subgroup.
[
  {
    $group: {
      _id:{gender:"$gender",city:"$city"},
    maxavg:{$avg:"$salary"}
    }
  }
]


9. Group users by role and determine the total number of unique cities for each role.
[
  {
    $group: {
      _id: "$role",
      uniqueCities: { $addToSet: "$city"}
    }
  
  },
 
  {
    $project: {
      counttotal: {$size:"$uniqueCities"}
    }
  }
]



10. Group users by age and count the number of users in each age group.
[
  {
    $group: {
      _id:"$age",
      countofusers:{$sum:1}
    }
  }
]



11. Group users by city and calculate the average number of skills per user in each city.
[
  {$addFields: {
    numberofskills:{$size:"$skills"}}
  },
   {
     $group: {
       _id:"$city",
       avgskill:{$avg:"$numberofskills"}
       }
 }
]

12. Group users by role and find the highest salary in each role.
[
   {
     $group: {
       _id:"$role",
       maxsal:{$max:"$salary"}
       }
 }
]


13. Group users by gender and calculate the total number of users for each gender.
[
   {
     $group: {
       _id:"$gender",
       countofuser:{$sum:1}
       }
 }
]


14. Group users by city and determine the average age for users in each city.

[
   {
     $group: {
       _id:"$city",
       avgerageage:{$avg:"$age"}
       }
 }
]

15. Group users by role and gender, and calculate the average salary for each subgroup.
[
   {
     $group: {
       _id:{role:"$role",gender:"$gender"},
       avgerageage:{$avg:"$age"}
       }
 }
]


16. Group users by skills and determine the total number of users for each skill.
[{$unwind:"$skills"},
{ $group: {
      _id:"$skills",
  countofusers:{$sum:1}}
  }
]



17. Group users by age and find the maximum salary for each age group.
[
{ $group: {
      _id:"$age",
  maxsal:{$avg:"$salary"}}
  }
]


18. Group users by role and calculate the total number of users with more than three skills.
[
  {
    $match: {
      "skills.2":{$exists:true}
    }
  },
{ $group: {
      _id:"$role",
countofusers:{$sum:1},
}
  }
]

19. Group users by gender and city, and find the average number of skills per user in each subgroup.
[   {$addFields: {
    numberofskills:{$size:"$skills"}}
  },
  {
    $group: {
      _id:{gender:"$gender",city:"$city"},
    avgskill:{$avg:"$numberofskills"}
    }
  }
]



20. Group users by role and determine the highest and lowest salaries for each role.
[ 
  {
    $group: {
      _id:{gender:"$gender",city:"$city"},
    maxsal:{$max:"$salary"},
      minsal:{$min:"$salary"}
    }
  }
]



1. Group users by city and find the average number of users per role in each city.
[{
$group: {
_id:{city: "$city",role:"$role"},
  avgnumber:{$avg:1}
}
}
]

2. Group users by role and gender, and calculate the total salary for each subgroup.
[
  {
    $group: {
      _id:{gender:"$gender",role:"$role"},
      countofsalary:{$sum:1},
      totalsalary:{$sum:"$salary"}
    }
  },
  {
    $project: {
      totalsalary:1
    }
  }
]




3. Group users by age and determine the total number of users with a salary above 1,000,000.
[
  {
    $match: {
      salary:{"$gte":1000000}
    }
  },
  {
    $group: {
      _id:"$age",
      countofuser:{$sum:1}
    }
  }
]


4. Group users by skills and find the average salary for users with each skill.
[
  {
    $unwind:"$skills"
  },
  {
    $group: {
      _id:"$skills",
      avgsalary:{$avg:"$salary"}
    }
  }
]




5. Group users by role and city, and find the average age for each subgroup.
[{
$group: {
_id:{city: "$city",role:"$role"},
  avgage:{$avg:"$age"}
}
}
]


6. Group users by gender and calculate the total number of users with Java as a skill.
[
  {$match: {
    skills:"Java"
  }
  },
  {
$group: {
_id:"$gender",
countofrole:{$sum:1}
}
}
]


7. Group users by city and determine the maximum number of skills any user in each city possesses.
[
  {
$group: {
_id:"$city",
  maxskill:{$max:{$size:"$skills"}}
}
}
]


8. Group users by role and calculate the total number of users for each role with Python as a skill.
[
  {$match: {
    skills:"Python"
  }
  },
  {
$group: {
_id:"$role",
countofrole:{$sum:1}
}
}
]



9. Group users by gender and city, and find the average salary for users in each subgroup with more than two skills.

[
   {
    $match: {
      "skills.3":{$exists:true}
    }},
  {
$group: {
_id:{city: "$city",gender:"$gender"},
avgsal:{$avg:"$salary"}

}
}
]


10. Group users by age and determine the average number of skills per user in each age group.
[
  
  {
$group: {
_id:"$age",
avgskill:{$avg:{$size:"$skills"}
         }
}
}
]


11. Group users by role and find the total salary of users who have "customer" as their role and live in Mumbai.
[
  {$match: {
    role:"customer",
    city:"Mumbai"
  }
  },
  {
$group: {
_id:{role:"$role",city:"$city"},
      totalsalary:{$sum:"$salary"}
    }
  },
  {
    $project: {
      totalsalary:1
    }
}
]

12. Group users by city and find the maximum salary in each city for users with "admin" role.
[
  {$match: {
    role:"admin"
  }
  },
  {
$group: {
_id:{role:"$role",city:"$city"},
      maxsalary:{$max:"$salary"}
    }
}
]



13. Group users by gender and calculate the total number of users with salary above 500,000.
[
  {
    $match: {
      salary:{"$gte":1000000}
    }
  },
  {
    $group: {
      _id:"$gender",
      countofuser:{$sum:1}
    }
  }
]




14. Group users by skills and determine the average age for users with each skill.
[
  {$unwind:"$skills"},
  
  {
    $group: {
      _id:"$skills",
      avgage:{$avg:"$age"}
    }
  }
]




15. Group users by role and find the average number of skills for users with salary below 700,000.
[
  {
    $match: {
      salary:{"$lt":700000}
  }
  },
  {
    $group: {
      _id:"$role",
      avgskills:{$avg:{$size:"$skills"}}
    }
  }
]




16. Group users by city and gender, and calculate the average salary for each subgroup with "Python" skill.

[
    {$match: {
    skills:"Python"
  }
  },
  {
    $group: {
      _id:{city:"$city",gender:"$gender"},
      avgsal:{$avg:"$salary"}
    }
  }
]



17. Group users by age and determine the total number of users with the role "admin" in each age group.
[
    {$match: {
    role:"admin"
  }
  },
  {
    $group: {
      _id:"$age",
      countofuser:{$sum:1}
    }
  }
]





18. Group users by role and city, and find the total number of users with "C++" as a skill in each subgroup.
[
    {$match: {
    skills:"C++"
  }
  },
  {
    $group: {
      _id:{city:"$city",role:"$role"},
      countofuser:{$sum:1}
    }
  }
]




19. Group users by gender and calculate the total number of users with salary above the average salary of all users
[
    {
        $group: {
            _id: "$gender",
            totalUsers: { $sum: 1 },
            avgSalary: { $avg: "$salary" },
            aboveAvgUsers: { $sum: { $cond: [{ $gt: ["$salary", "$avgSalary"] }, 1, 0] } }
        }
    }
]

			////or////

[
  {
    $group:
      {
        _id:null,
        avgsal:{$avg:"$salary"},
        users:{$push:"$$ROOT"}
      }
  },
  {
    $unwind:"$users"
  },
  {
    $addFields: {
      "users.averagesalary":"$avgsal"
    }
  },
  {
    $replaceRoot: {
      newRoot:"$users"
    }
  },
  {
    $match:
      {
				$expr:{$gt:["$salary","$averagesalary"]}
      }
  },
  {
    $group:
      {   _id:"$gender",
    totalusers:{$sum:1}
      }
  }
]



20. Group users by skills and determine the maximum age of users with each skill.

[
  {$unwind:"$skills"},
  {
    $group: {
      _id:"$skills",
      maxage:{$max:"$age"}
    }
  }
]

21. Group users by role and city, and calculate the total number of users with more than one skill.
[
  {
    $match: {
      "skills.1":{$exists:true}
    }
  },
  {
    $group: {
      _id:{city:"$city",role:"$role"},
      countofuser:{$sum:1}
      
    }
  }
]



22. Group users by gender and city, and determine the total number of users with a salary less than 500,000 in each subgroup.
[
  {
    $match: {
      salary:{"$lt":500000}
    }
  },
  {
    $group: {
      _id:{city:"$city",role:"$gender"},
      countofuser:{$sum:1}
      
    }
  }
]



23. Group users by age and find the average salary of users who have "customer" role in each age group.
[
  {
    $match: {
      role:"customer"
    }
  },
  {
    $group: {
      _id:"$age",
      avgsal:{$avg:"$salary"}
      
    }
  }
]



24. Group users by role and determine the average salary for users with "Kotlin" as a skill.
[
  {
    $match: {
      skills:"Kotlin"
    }
  },
  {
    $group: {
      _id:"$role",
      avgsal:{$avg:"$salary"}
      
    }
  }
]




25. Group users by city and calculate the total number of users with "admin" role in each city.
[
  {
    $match: {
      role:"admin"
    }
  },
  {
    $group: {
      _id:"$city",
      countofuser:{$sum:1}
      
    }
  }
]



26. Group users by gender and determine the total number of users with "Java" and "Python" both as skills.
[
  {
    $match: {
      skills:"Java",skills:"Python"
    }
  },
  {
    $group: {
      _id:"$gender",
      countofuser:{$sum:1}
      
    }
  }
]




27. Group users by age and find the total number of users with the role "customer" in each age group.
[
  {
    $match: {
      role:"customer"
    }
  },
  {
    $group: {
      _id:"$age",
      countofuser:{$sum:1}
      
    }
  }
]




28. Group users by role and city, and calculate the total number of users with "DBMS" as a skill in each subgroup.
[
  {
    $match: {
      skills:"DBMS"
    }
  },
  {
    $group: {
      _id:{role:"$role",city:"$city"},
      countofuser:{$sum:1}
      
    }
  }
]




29. Group users by gender and determine the total number of users with more than three skills in each gender.
[
  {
    $match: {
      "skills.3":{$exists:true}
    }
  },
  {
    $group: {
      _id:"$gender",
      countofuser:{$sum:1}
      
    }
  }
]




30. Group users by city and find the average number of skills for users in each city with salary above 1,000,000.

[
  {
    $match: {
      salary:{"$gt":1000000}
    }
  },
   {$addFields: {
    numberofskills:{$size:"$skills"}}
  },
   {
     $group: {
       _id:"$city",
       avgskill:{$avg:"$numberofskills"}
       }
 }
]




31. Group users by age and determine the maximum salary for users with "admin" role in each age group.
[
  {
    $match: {
     role:"admin"
    }
  },
  {
    $group: {
      _id:"$age",
      maxsal:{$max:"$salary"}
      
    }
  }
]




32. Group users by role and city, and find the total salary of users with "JavaScript" as a skill in each subgroup.
[
  {
    $match: {
     skills:"JavaScript"
    }
  },
  {
    $group: {
      _id:{role:"$role",city:"$city"},
      maxsal:{$max:"$salary"}
      
    }
  }
]





33. Group users by gender and determine the average salary for users with the role "customer" in each gender.
[
  {
    $match: {
     role:"customer"
    }
  },
  {
    $group: {
      _id:"$gender",
      avgsal:{$avg:"$salary"}
      
    }
  }
]




34. Group users by city and calculate the total number of users with "React" as a skill in each city.
[
  {
    $match: {
    skills:"React"
    }
  },
  {
    $group: {
      _id:"$city",
      avgsal:{$avg:"$salary"}
      
    }
  }
]



35. Group users by age and determine the average salary for users with "SQL" as a skill in each age group.
[
  {
    $match: {
    skills:"SQL"
    }
  },
  {
    $group: {
      _id:"$age",
      avgsal:{$avg:"$salary"}
      
    }
  }
]




36. Group users by role and find the total number of users with "Django" as a skill in each role.
[
  {
    $match: {
    skills:"Django"
    }
  },
  {
    $group: {
      _id:"$role",
      countofuser:{$sum:1}
      
    }
  }
]




37. Group users by gender and determine the maximum number of skills any user in each gender possesses.

[
    {$addFields: {
    numberofskills:{$size:"$skills"}}
  },
   {
     $group: {
       _id:"$gender",
       avgskill:{$avg:"$numberofskills"}
       }
 }
]



38. Group users by city and calculate the total number of users with "Node.js" as a skill in each city.
[
  {
    $match: {
    skills:"Node.js"
    }
  },
  {
    $group: {
      _id:"$gender",
      countofuser:{$sum:1}
      
    }
  }
]




39. Group users by age and find the total number of users with "HTML" and "CSS" both as skills in each age group.
[
  {
    $match: {
    skills:"HTML",skills:"CSS"
    }
  },
  {
    $group: {
      _id:"$age",
      countofuser:{$sum:1}
      
    }
  }
]




40. Group users by role and gender, and determine the average number of skills for each subgroup with salary above 1,000,000.
[
  {
    $match: {
      salary:{"$gte":1000000}
    }
  },
  {$addFields: {
    numberofskills:{$size:"$skills"}}
  },
  {
    $group: {
      _id:{role:"$role",gender:"$gender"},
      avgskill:{$avg:"$numberofskills"}
    }
  }
]
